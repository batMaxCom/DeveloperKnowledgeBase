version: "3.8"
services:

  publisher_service:
    container_name: publisher_service
    build:
      context: ./publisher_service
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    environment:
      # RabbitMQ connection configuration
      - RMQ_LOGIN=rabbituser
      - RMQ_PASSWORD=rabbitpwd
      - RMQ_HOST=rabbitmq
      - RMQ_PORT=5672
    ports:
      - "8000:80"
    restart: unless-stopped

  consumer_service:
    container_name: consumer_service
    build:
      context: ./consumer_service
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    environment:
      # RabbitMQ connection configuration
      - RMQ_LOGIN=rabbituser
      - RMQ_PASSWORD=rabbitpwd
      - RMQ_HOST=rabbitmq
    ports:
      - "8001:80"
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.13.7-management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rabbituser
      - RABBITMQ_DEFAULT_PASS=rabbitpwd
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    volumes:
      - rabbit_data:/var/lib/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    restart: unless-stopped

volumes:
  rabbit_data:
    driver: local
